"""
simulate_reads.snk

chris cowled 31.10.2018

snakemake -nps simulate_reads.snk 
"""

import os


CWD     = os.getcwd()
BASEDIR = workflow.basedir # this is full path to the snakefile itself
ENVSDIR = '%s/../envs' % BASEDIR
DATADIR = '%s/../data' % BASEDIR
READDIR = '%s/../reads' % CWD

def dictFromText(infile):
    '''extract contents of a text file (in the form KEY=VALUE) and return as a dict
    '''
    data = {}
    with open(infile, 'r') as F:
        for line in F.readlines():
            items = [s.strip() for s in line.split('=')]
            data[items[0]] = items[1]
    return data


PARAMS  = dictFromText("%s/params.txt" % CWD)


rule all:
    input:
        expand("%s/simulation_%s_x{DEPTH}.{READ}.fastq.gz" % (READDIR, PARAMS['TAG']), DEPTH=[1,2,4,8,16,32], READ=[1,2])


rule simulate_reads:
    input:
        script="%s/simulate_reads.py" % BASEDIR
    output:
        expand("%s/simulation_%s_x{DEPTH}.{READ}.fastq" % (CWD, PARAMS['TAG']), DEPTH=[1,2,4,8,16,32], READ=[1,2])
    conda:
        "%s/simulation.yaml" % ENVSDIR
    run:
        "python {input.script} {PARAMS}"
                        


rule compress_reads:
    input:
        expand("%s/simulation_%s_x{DEPTH}.{READ}.fastq" % (CWD, PARAMS['TAG']), DEPTH=[1,2,4,8,16,32], READ=[1,2])
    output:
        expand("%s/simulation_%s_x{DEPTH}.{READ}.fastq.gz" % (READDIR, PARAMS['TAG']), DEPTH=[1,2,4,8,16,32], READ=[1,2])
    run:
        """
        gzip simulation_*_x*.fastq
        mv *.fastq.gz %s/reads
        mv *stats.txt %s/stats
        """ % CWD

